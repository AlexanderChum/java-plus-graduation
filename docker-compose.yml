services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  stat-db:
    image: postgres:16.1
    container_name: stat
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=stat
      - POSTGRES_USER=stat
      - POSTGRES_DB=stat
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  location-db:
    image: postgres:16.1
    container_name: location
    ports:
      - "6550:5432"
    environment:
      - POSTGRES_PASSWORD=location
      - POSTGRES_USER=location
      - POSTGRES_DB=location
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  category-db:
    image: postgres:16.1
    container_name: category
    ports:
      - "6551:5432"
    environment:
      - POSTGRES_PASSWORD=category
      - POSTGRES_USER=category
      - POSTGRES_DB=category
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  user-db:
    image: postgres:16.1
    container_name: user
    ports:
      - "6552:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=user
      - POSTGRES_DB=user
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  event-db:
    image: postgres:16.1
    container_name: event
    ports:
      - "6553:5432"
    environment:
      - POSTGRES_PASSWORD=event
      - POSTGRES_USER=event
      - POSTGRES_DB=event
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  request-db:
    image: postgres:16.1
    container_name: request
    ports:
      - "6554:5432"
    environment:
      - POSTGRES_PASSWORD=request
      - POSTGRES_USER=request
      - POSTGRES_DB=request
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  compilation-db:
    image: postgres:16.1
    container_name: compilation
    ports:
      - "6555:5432"
    environment:
      - POSTGRES_PASSWORD=compilation
      - POSTGRES_USER=compilation
      - POSTGRES_DB=compilation
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10